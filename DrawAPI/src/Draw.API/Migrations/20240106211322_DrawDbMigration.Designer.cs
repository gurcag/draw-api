// <auto-generated />
using System;
using Draw.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Draw.API.Migrations
{
    [DbContext(typeof(DrawDbContext))]
    [Migration("20240106211322_DrawDbMigration")]
    partial class DrawDbMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Draw.API.Entites.CountryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Türkiye"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Almanya"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fransa"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hollanda"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Portekiz"
                        },
                        new
                        {
                            Id = 6,
                            Name = "İtalya"
                        },
                        new
                        {
                            Id = 7,
                            Name = "İspanya"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Belçika"
                        });
                });

            modelBuilder.Entity("Draw.API.Entites.DrawEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<int>("OptionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("UserId");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("Draw.API.Entites.DrawOptionsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("NumberOfGroups")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DrawOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumberOfGroups = (byte)4
                        },
                        new
                        {
                            Id = 2,
                            NumberOfGroups = (byte)8
                        });
                });

            modelBuilder.Entity("Draw.API.Entites.TeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Adesso İstanbul"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Adesso Ankara"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Adesso İzmir"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Adesso Antalya"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "Adesso Berlin"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            Name = "Adesso Frankfurt"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 2,
                            Name = "Adesso Münih"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 2,
                            Name = "Adesso Dortmund"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 3,
                            Name = "Adesso Paris"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 3,
                            Name = "Adesso Marsilya"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 3,
                            Name = "Adesso Nice"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 3,
                            Name = "Adesso Lyon"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 4,
                            Name = "Adesso Amsterdam"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 4,
                            Name = "Adesso Rotterdam"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 4,
                            Name = "Adesso Lahey"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 4,
                            Name = "Adesso Eindhoven"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 5,
                            Name = "Adesso Lisbon"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 5,
                            Name = "Adesso Porto"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 5,
                            Name = "Adesso Braga"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 5,
                            Name = "Adesso Coimbra"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 6,
                            Name = "Adesso Roma"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 6,
                            Name = "Adesso Milano"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 6,
                            Name = "Adesso Venedik"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 6,
                            Name = "Adesso Napoli"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 7,
                            Name = "Adesso Sevilla"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 7,
                            Name = "Adesso Madrid"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 7,
                            Name = "Adesso Barselona"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 7,
                            Name = "Adesso Granada"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 8,
                            Name = "Adesso Brüksel"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 8,
                            Name = "Adesso Brugge"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 8,
                            Name = "Adesso Gent"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 8,
                            Name = "Adesso Anvers"
                        });
                });

            modelBuilder.Entity("Draw.API.Entites.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gurcag Yaman",
                            Password = "yaman",
                            Username = "gurcag"
                        });
                });

            modelBuilder.Entity("Draw.API.Entites.DrawEntity", b =>
                {
                    b.HasOne("Draw.API.Entites.DrawOptionsEntity", "Options")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draw.API.Entites.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Draw.API.Entites.TeamEntity", b =>
                {
                    b.HasOne("Draw.API.Entites.CountryEntity", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
